#!/usr/bin/env bash

usage() {
    printf "                                     \n"
    printf "  Usage: transcribe <directory name> \n"
    printf "                                     \n"
}

while true; do
  case "$1" in
    -h ) usage; exit 0 ;;
    * ) RECORDINGS_DIRECTORY=$1 ; break ;;
  esac
done

UPLOADS_BUCKET_NAME="radio-uploads"
TRANSCRIPTIONS_BUCKET_NAME="radio-transcripts"

function create_transcribe_job() {
  FILENAME_WITH_PATH="${RECORDINGS_DIRECTORY}/$1"
  TRANSCRIPTION_JOB_NAME=$(echo "${FILENAME}" | cut -d "." -f 1)
  MEDIA_FILE_URI="s3://${UPLOADS_BUCKET_NAME}/${FILENAME}"

  AWS_COPY_CMD="aws s3 cp $FILENAME_WITH_PATH s3://${UPLOADS_BUCKET_NAME}"
  AWS_LS_CMD="aws s3 ls s3://${UPLOADS_BUCKET_NAME}/${FILENAME}"
  AWS_TRANSCRIBE_CMD="aws transcribe start-transcription-job \
    --transcription-job-name $TRANSCRIPTION_JOB_NAME \
    --identify-language \
    --media-format mp3 \
    --media MediaFileUri=$MEDIA_FILE_URI \
    --output-bucket-name $TRANSCRIPTIONS_BUCKET_NAME"

  eval "${AWS_COPY_CMD}"

  while true; do
    eval "$AWS_LS_CMD"
    if [[ $? == 0 ]]; then
      eval "$AWS_TRANSCRIBE_CMD"
      break
    else
      sleep 3
    fi
  done
}

while true; do
  FILENAME=$(inotifywait -q -e close_write --format %f "${RECORDINGS_DIRECTORY}")
  if [[ $(echo "$FILENAME" | cut -d '.' -f 2) -eq 'mp3' ]]; then
    create_transcribe_job "$FILENAME"
  fi
done
